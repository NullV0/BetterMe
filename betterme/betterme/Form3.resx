<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBMAAAEAIAD0CQAAFgAAACgAAAAgAAAAJgAAAAEAIAAAAAAAgAkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjY9ABwXGgAAAAAASkVPBSIg
        IxcZGRknGhobJCUkJxLc0+cBBQQFACEgIQBPS1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFNYABkWFwAAAAAAHxkdJBAP
        EGkKCQuqBwYH0AQEBeEFBQXeBwcIyAsKDJoSEBFUJCMkFAAAAAAoISoAb2RyAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEE+RgAAAAAAHxsdGxEM
        Dn8JBgfcAgIC/wEBAf8BAQH/AQEB/wEBAf8BAQH/AQEB/wMDA/oICAjHExASXjEoMwsWFRUAf3WAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFO0YAAAAAABgV
        FzsJBwjIAwIC/wIBAv8CAgP9AwME8wQEBegFBQXfBAQE4QQEBOsDAwT2AgIC/wEBAf8EAwT7DgoOpCEe
        IRwODQwAi4mLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARj9EAAAA
        AAAWEhZECQcI3AYEBewICAm1DAwNgRAQEVgUExU7FxcYKRoaGh4YGBkgFhUYLRIRFEEPDhBjCwsMjggH
        CMYGBAb0CwkLuRwZGyEaFBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1X
        WgAhGh0AGxUXNxIMDcISCw2MGxQaMjMvNQgAAAAABgUGAA8PEQAWFRcAGxobABgYGQAUExYADQ0PAAAA
        AAAAAAAAKSQpDxYSFUcOCwyqEQ4QqCMeIhcrJCcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATUZMACkiJR0dFxh/GxUWPv///wEXEBUALCgtAGlmbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AE9OUgAmIiYACwcKADMuNAkaFBdcIRoday8pLAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAwJzABMCguKy0nKhkQCgsAQTc7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz6/AAKCQpAAAAAAAuJyorNi4zGwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACUcJwBRQmAAJh8hAG1paQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQTs9ABYQDwBKQUkBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxYhADEoMwBHPUgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAS0RKAD83
        PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA5QAA/Nj4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPjxCAERC
        RgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxZYgAbGh4AqZSeATszOgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA9OkAEAAAAACUlJgBeXGEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEY/
        QwAtJisAJR4jACYhJgAkIiYAIiEjABgYGQANDQ8AAAAAABwbHxUbGRxYKiYrFgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACUkJzEbGhxLLS0tCAAAAQAREBMAGxobACchJQAmICQAKyQoACceJAA3LTMAAAAAAAAA
        AAAAAAAARj9DASskKBAeFxwSIh0jCyMiJgshICIRGRkZIRISEz8MCw13DAsNthQTFl4iISYDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAIiEkDhMSFIoMDA6sDw4QZRQTFjUaGRobJiAkDycgJAokHiENIRkeFTYs
        MgoAAAAAAAAAAAAAAABAOT4BJB0hNBQOEJcMCAq8BwcHxgYGBtMFBQXlBQUG8QcHCNQQEBBiNjY4AyUk
        KgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcHB8AISAlEg4NEIsHBwjkBQUF8AYFBd8JBQbPCwYHww8K
        C7YWEhWAMCctGgAAAAAAAAAAAAAAAEM8QABaXUEAHhkZGREOEFUKCQyKCQgKoQkJC5MNDBFdGRgcHAAA
        AAApKSsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGyAAWFVcAhYVGS0NDQ9wCgkLnQsI
        Cp0PCgx+FxETQiAeIA0oHSIAAAAAAAAAAAAAAAAAAAAAAD45NwAhHBwACQYHAAAAAAD///8AAAAAAAEA
        AwAXFRoAOjk8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsKzAAEhIVAAAA
        AAAAAAAAAAAAAAAAAAASDA4AJiMlAIaAhwAAAAAAAAAAAP/4H///4Af//4AB//8AAP/+AAB//B/4P/h/
        /h/x//+f////3///////////////////////5+///8fj/4AH4AOAD/AD4D/4B/////8=
</value>
  </data>
</root>